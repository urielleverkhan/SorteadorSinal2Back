// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SorteadorSinal2.repositorios;

namespace SorteadorSinal2.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SorteadorSinal2.models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(2) CHARACTER SET utf8mb4")
                        .HasMaxLength(2);

                    b.Property<string>("Nascimento")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Cidade = "Rio preto",
                            Cpf = "222.222.222-22",
                            Estado = "Sp",
                            Nascimento = "15/03/1999",
                            Nome = "Maricota da Silva",
                            Telefone = "11 99222221"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Cidade = "Rio preto",
                            Cpf = "222.222.222-22",
                            Estado = "Sp",
                            Nascimento = "11/12/1990",
                            Nome = "Jose pereira",
                            Telefone = "11 99222222"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = false,
                            Cidade = "Rio preto",
                            Cpf = "222.222.222-22",
                            Estado = "Sp",
                            Nascimento = "25/03/2018",
                            Nome = "Joao Costa",
                            Telefone = "11 99222223"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Cidade = "Rio preto",
                            Cpf = "222.222.222-22",
                            Estado = "Sp",
                            Nascimento = "06/06/1949",
                            Nome = "Larisa casablanca",
                            Telefone = "11 99222224"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            Cidade = "Rio preto",
                            Cpf = "222.222.222-22",
                            Estado = "Sp",
                            Nascimento = "12/03/2000",
                            Nome = "Joana camargo",
                            Telefone = "11 99222225"
                        });
                });

            modelBuilder.Entity("SorteadorSinal2.models.Participantes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClientesId")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPromocao")
                        .HasColumnType("int");

                    b.Property<int?>("PromocoesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("PromocoesId");

                    b.ToTable("Participantes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCliente = 2,
                            IdPromocao = 2
                        },
                        new
                        {
                            Id = 2,
                            IdCliente = 4,
                            IdPromocao = 2
                        },
                        new
                        {
                            Id = 3,
                            IdCliente = 2,
                            IdPromocao = 1
                        },
                        new
                        {
                            Id = 4,
                            IdCliente = 1,
                            IdPromocao = 2
                        },
                        new
                        {
                            Id = 5,
                            IdCliente = 5,
                            IdPromocao = 1
                        },
                        new
                        {
                            Id = 6,
                            IdCliente = 4,
                            IdPromocao = 3
                        },
                        new
                        {
                            Id = 7,
                            IdCliente = 1,
                            IdPromocao = 3
                        });
                });

            modelBuilder.Entity("SorteadorSinal2.models.Promocoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VigenciaFim")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("VigenciaInicio")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Promocoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Nome = "Churrascaria boi feliz",
                            VigenciaFim = "20/03/2023",
                            VigenciaInicio = "10/03/2023"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = false,
                            Nome = "Funeraria cliente agradecido",
                            VigenciaFim = "05/03/2023",
                            VigenciaInicio = "01/03/2023"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Nome = "Fabrica de gelos escorrega",
                            VigenciaFim = "10/03/2023",
                            VigenciaInicio = "07/03/2023"
                        });
                });

            modelBuilder.Entity("SorteadorSinal2.models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = false,
                            Login = "naira",
                            Nome = "Naira Danile",
                            Senha = "123456"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Login = "josi",
                            Nome = "Josiane bueno",
                            Senha = "654321"
                        });
                });

            modelBuilder.Entity("SorteadorSinal2.models.Vencedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClientesId")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPromocao")
                        .HasColumnType("int");

                    b.Property<int?>("PromocoesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("PromocoesId");

                    b.ToTable("Vencedores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdCliente = 2,
                            IdPromocao = 2
                        },
                        new
                        {
                            Id = 2,
                            IdCliente = 4,
                            IdPromocao = 2
                        },
                        new
                        {
                            Id = 3,
                            IdCliente = 4,
                            IdPromocao = 3
                        });
                });

            modelBuilder.Entity("SorteadorSinal2.models.Participantes", b =>
                {
                    b.HasOne("SorteadorSinal2.models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId");

                    b.HasOne("SorteadorSinal2.models.Promocoes", "Promocoes")
                        .WithMany()
                        .HasForeignKey("PromocoesId");
                });

            modelBuilder.Entity("SorteadorSinal2.models.Vencedores", b =>
                {
                    b.HasOne("SorteadorSinal2.models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId");

                    b.HasOne("SorteadorSinal2.models.Promocoes", "Promocoes")
                        .WithMany()
                        .HasForeignKey("PromocoesId");
                });
#pragma warning restore 612, 618
        }
    }
}
